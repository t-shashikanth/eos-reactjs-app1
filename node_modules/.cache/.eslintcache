[{"/home/ec2-user/ShoppingApp/src/index.js":"1","/home/ec2-user/ShoppingApp/src/App.jsx":"2","/home/ec2-user/ShoppingApp/src/context/AuthProvider.js":"3","/home/ec2-user/ShoppingApp/src/Catalog.jsx":"4","/home/ec2-user/ShoppingApp/src/Login.jsx":"5","/home/ec2-user/ShoppingApp/src/Register.jsx":"6","/home/ec2-user/ShoppingApp/src/Kart.jsx":"7","/home/ec2-user/ShoppingApp/src/CatalogList.jsx":"8","/home/ec2-user/ShoppingApp/src/Order.jsx":"9","/home/ec2-user/ShoppingApp/src/Payment.jsx":"10","/home/ec2-user/ShoppingApp/src/Success.jsx":"11","/home/ec2-user/ShoppingApp/src/Profile.jsx":"12","/home/ec2-user/ShoppingApp/src/api/axios.js":"13","/home/ec2-user/ShoppingApp/src/Header.jsx":"14"},{"size":342,"mtime":1664223608000,"results":"15","hashOfConfig":"16"},{"size":972,"mtime":1666008732000,"results":"17","hashOfConfig":"16"},{"size":315,"mtime":1664223608000,"results":"18","hashOfConfig":"16"},{"size":3469,"mtime":1666244111077,"results":"19","hashOfConfig":"16"},{"size":2523,"mtime":1666009879000,"results":"20","hashOfConfig":"16"},{"size":3351,"mtime":1664223608000,"results":"21","hashOfConfig":"16"},{"size":2926,"mtime":1665940501000,"results":"22","hashOfConfig":"16"},{"size":7447,"mtime":1666029440000,"results":"23","hashOfConfig":"16"},{"size":1625,"mtime":1665764579000,"results":"24","hashOfConfig":"16"},{"size":6335,"mtime":1666164069000,"results":"25","hashOfConfig":"16"},{"size":429,"mtime":1666029521000,"results":"26","hashOfConfig":"16"},{"size":5163,"mtime":1666165522000,"results":"27","hashOfConfig":"16"},{"size":105,"mtime":1666627256669,"results":"28","hashOfConfig":"16"},{"size":3556,"mtime":1666010840000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16fdhi3",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},"/home/ec2-user/ShoppingApp/src/index.js",[],[],"/home/ec2-user/ShoppingApp/src/App.jsx",[],[],"/home/ec2-user/ShoppingApp/src/context/AuthProvider.js",[],[],"/home/ec2-user/ShoppingApp/src/Catalog.jsx",["80","81","82"],[],"import { useRef, useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport axios from './api/axios';\nimport CatalogList from './CatalogList';\nimport Header from './Header';\nconst CATALOG_URL = '/v1/catalog';\nconst CATALOG_IMAGE_URL = '/v1/catalog/add-image';\n\nconst Catalog = () => {\n\tconst userRef = useRef();\n\tconst errRef = useRef();\n\n\tconst [user, setUser] = useState('');\n\tconst [itemName, setItemName] = useState('');\n\tconst [description, setDescription] = useState('');\n\tconst [amount, setAmount] = useState(0);\n\tconst [image, setImage] = useState();\n\tconst [pwd, setPwd] = useState('');\n\tconst [errMsg, setErrMsg] = useState('');\n\tconst [success, setSuccess] = useState(false);\n\tconst navigate = useNavigate();\n\n\tuseEffect(() => {\n\t\tuserRef.current.focus();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tsetErrMsg('');\n\t}, [user, pwd]);\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\n\t\ttry {\n\t\t\tlet item = {\n\t\t\t\t\"itemName\": itemName,\n\t\t\t\t\"description\": description,\n\t\t\t\t\"amount\": amount\n\t\t\t}\n\t\t\tlet formData = new FormData()\n\t\t\tformData.append('item_photo', image)\n\t\t\tlet response = await axios.post(CATALOG_URL, item, null);\n\t\t\tconsole.log(response.data);\n\t\t\tif (response.data == -1) {\n\t\t\t\tsetErrMsg('Login Failed');\n\t\t\t\tsetUser('');\n\t\t\t\tsetPwd('');\n\t\t\t\tthrow errMsg;\n\t\t\t} else {\n\t\t\t\tsetUser('');\n\t\t\t\tsetPwd('');\n\t\t\t\tsetSuccess(true);\n\t\t\t\tawait axios.put(`${CATALOG_IMAGE_URL}/${response.data.id}`, formData);\n\t\t\t\tif (success) {\n\t\t\t\t\tnavigate('/')\n\t\t\t\t}\n\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tif (!err?.response) {\n\t\t\t\tsetErrMsg('No Server Response');\n\t\t\t} else if (err.response?.status === 400) {\n\t\t\t\tsetErrMsg('Missing Username or Password');\n\t\t\t} else if (err.response?.status === 401) {\n\t\t\t\tsetErrMsg('Unauthorized');\n\t\t\t} else {\n\t\t\t\tsetErrMsg('Login Failed');\n\t\t\t}\n\t\t\terrRef.current.focus();\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"container-fluid\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<Header />\n\t\t\t\t<div className=\"col-md-12 d-flex justify-content-center aligin-item-center mt-2\">\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<p\n\t\t\t\t\t\t\tref={errRef}\n\t\t\t\t\t\t\tclassName={errMsg ? 'errmsg' : 'offscreen'}\n\t\t\t\t\t\t\taria-live=\"assertive\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{errMsg}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<h1>Add Item</h1>\n\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t<label htmlFor=\"itemName ,\">Name:</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tid=\"itemName\"\n\t\t\t\t\t\t\t\tref={userRef}\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\tonChange={(e) => setItemName(e.target.value)}\n\t\t\t\t\t\t\t\tvalue={itemName}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<label htmlFor=\"description ,\">Description:</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tid=\"description\"\n\t\t\t\t\t\t\t\tref={userRef}\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\n\t\t\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<label htmlFor=\"amount ,\">Amount:</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tid=\"amount\"\n\t\t\t\t\t\t\t\tref={userRef}\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\tstyle={{ width: '150px', height: '37px' }}\n\t\t\t\t\t\t\t\tonChange={(e) => setAmount(e.target.value)}\n\t\t\t\t\t\t\t\tvalue={amount}\n\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<label htmlFor=\"image ,\">Image:</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\tid=\"image\"\n\t\t\t\t\t\t\t\tref={userRef}\n\t\t\t\t\t\t\t\tonChange={(e) => setImage(e.target.files[0])}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button className='btn btn-outline-primary'>Add Item</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Catalog;\n","/home/ec2-user/ShoppingApp/src/Login.jsx",["83","84","85","86"],[],"import { useRef, useState, useEffect, useContext } from 'react';\n\nimport CatalogList from './CatalogList';\nimport axios from './api/axios';\nimport { useNavigate } from 'react-router-dom';\nconst LOGIN_URL = '/v1/user/login';\n\nconst Login = () => {\n\tconst userRef = useRef();\n\tconst errRef = useRef();\n\tconst navigate = useNavigate()\n\n\tconst [user, setUser] = useState('');\n\tconst [pwd, setPwd] = useState('');\n\tconst [errMsg, setErrMsg] = useState('');\n\tconst [success, setSuccess] = useState(false);\n\n\tuseEffect(() => {\n\t\tuserRef.current.focus();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tsetErrMsg('');\n\t}, [user, pwd]);\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\n\t\ttry {\n\t\t\tlet login = {\n\t\t\t\t\"username\": user,\n\t\t\t\t\"password\": pwd\n\t\t\t}\n\t\t\tlet response = await axios.post(LOGIN_URL, login, null);\n\t\t\t// console.log(response.data);\n\t\t\tif(!response){\n\t\t\t\tsetErrMsg('Login Failed');\n\t\t\t\tsetUser('');\n\t\t\t\tsetPwd('');\n\t\t\t\tthrow errMsg;\n\t\t\t} else {\n\t\t\t\tsetUser('');\n\t\t\t\tsetPwd('');\n\t\t\t\t// setSuccess(true);\n\t\t\t\t// if (success) {\n\t\t\t\t// \tnavigate('/catalog')\n\t\t\t\t// }\n\t\t\t\t// console.log('user in login',response.data);\n\t\t\t\tawait localStorage.setItem('user',JSON.stringify(response.data))\n\t\t\t\t// let user = JSON.parse(localStorage.getItem('user'))\n\t\t\t\t// console.log('user',user);\n\t\t\t\tnavigate('/')\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tif (!err?.response) {\n\t\t\t\tsetErrMsg('No Server Response');\n\t\t\t} else if (err.response?.status === 400) {\n\t\t\t\tsetErrMsg('Missing Username or Password');\n\t\t\t} else if (err.response?.status === 401) {\n\t\t\t\tsetErrMsg('Unauthorized');\n\t\t\t} else {\n\t\t\t\tsetErrMsg('Login Failed');\n\t\t\t}\n\t\t\terrRef.current.focus();\n\t\t}\n\t};\n\n\treturn (\n\t\t<section>\n\t\t\t\t\t<p\n\t\t\t\t\t\tref={errRef}\n\t\t\t\t\t\tclassName={errMsg ? 'errmsg' : 'offscreen'}\n\t\t\t\t\t\taria-live=\"assertive\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{errMsg}\n\t\t\t\t\t</p>\n\t\t\t\t\t<h1>Sign In</h1>\n\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<label htmlFor=\"username\">Username:</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\tref={userRef}\n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\tonChange={(e) => setUser(e.target.value)}\n\t\t\t\t\t\t\tvalue={user}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<label htmlFor=\"password\">Password:</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\tonChange={(e) => setPwd(e.target.value)}\n\t\t\t\t\t\t\tvalue={pwd}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button>Sign In</button>\n\t\t\t\t\t</form>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tNeed an Account?\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<span className=\"line\">\n\t\t\t\t\t\t\t<a href=\"/signup\">Sign Up</a>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\t);\n};\n\nexport default Login;\n","/home/ec2-user/ShoppingApp/src/Register.jsx",["87","88","89","90"],[],"import { useRef, useState, useEffect } from 'react';\nimport Login from './Login';\nimport axios from './api/axios';\nconst REGISTER_URL = '/v1/user/register';\n\nconst Register = () => {\n\tconst userRef = useRef();\n\tconst errRef = useRef();\n\n\tconst [user, setUser] = useState('');\n\tconst [userFocus, setUserFocus] = useState(false);\n\n\tconst [pwd, setPwd] = useState('');\n\tconst [pwdFocus, setPwdFocus] = useState(false);\n\n\tconst [email, setEmail] = useState('');\n\tconst [emailFocus, setEmailFocus] = useState(false);\n\n\tconst [mobile, setMobile] = useState('');\n\tconst [mobileFocus, setMobileFocus] = useState(false);\n\n\tconst [errMsg, setErrMsg] = useState('');\n\tconst [success, setSuccess] = useState(false);\n\n\tuseEffect(() => {\n\t\tuserRef.current.focus();\n\t}, []);\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tlet userRq = {\n\t\t\t\t\"username\": user,\n\t\t\t\t\"password\": pwd,\n\t\t\t\t\"email\": email,\n\t\t\t\t\"mobile\": mobile\n\t\t\t}\n\t\t\tlet response = await axios.post(REGISTER_URL, userRq, null);\n\t\t\tconsole.log(response.data);\n\t\t\t\tsetUser('');\n\t\t\t\tsetPwd('');\n\t\t\t\tsetEmail('');\n\t\t\t\tsetMobile('');\n\t\t\t\tsetSuccess(true);\n\t\t} catch (err) {\n\t\t\tif (!err?.response) {\n\t\t\t\tsetErrMsg('No Server Response');\n\t\t\t} else if (err.response?.status === 400) {\n\t\t\t\tsetErrMsg('Missing Username or Password');\n\t\t\t} else if (err.response?.status === 401) {\n\t\t\t\tsetErrMsg('Unauthorized');\n\t\t\t} else {\n\t\t\t\tsetErrMsg('Login Failed');\n\t\t\t}\n\t\t\terrRef.current.focus();\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{success ? (\n\t\t\t\t<Login />\n\t\t\t) : (\n\t\t\t\t<section >\n\t\t\t\t\t<p\n\t\t\t\t\t\tref={errRef}\n\t\t\t\t\t\tclassName={errMsg ? 'errmsg' : 'offscreen'}\n\t\t\t\t\t\taria-live=\"assertive\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{errMsg}\n\t\t\t\t\t</p>\n\t\t\t\t\t<h1>Register</h1>\n\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<label htmlFor=\"username\">\n\t\t\t\t\t\t\tUsername:\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\tref={userRef}\n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\tonChange={(e) => setUser(e.target.value)}\n\t\t\t\t\t\t\tvalue={user}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\taria-describedby=\"uidnote\"\n\t\t\t\t\t\t\tonFocus={() => setUserFocus(true)}\n\t\t\t\t\t\t\tonBlur={() => setUserFocus(false)}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<label htmlFor=\"password\">\n\t\t\t\t\t\t\tPassword:\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\tonChange={(e) => setPwd(e.target.value)}\n\t\t\t\t\t\t\tvalue={pwd}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\taria-describedby=\"pwdnote\"\n\t\t\t\t\t\t\tonFocus={() => setPwdFocus(true)}\n\t\t\t\t\t\t\tonBlur={() => setPwdFocus(false)}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<label htmlFor=\"email\">\n\t\t\t\t\t\t\tEmail:\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\taria-describedby=\"emailnote\"\n\t\t\t\t\t\t\tonFocus={() => setEmailFocus(true)}\n\t\t\t\t\t\t\tonBlur={() => setEmailFocus(false)}\n\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t<label htmlFor=\"mobile\">\n\t\t\t\t\t\t\tMobile:\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tid=\"mobile\"\n\t\t\t\t\t\t\tonChange={(e) => setMobile(e.target.value)}\n\t\t\t\t\t\t\tvalue={mobile}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\taria-describedby=\"mobilenote\"\n\t\t\t\t\t\t\tonFocus={() => setMobileFocus(true)}\n\t\t\t\t\t\t\tonBlur={() => setMobileFocus(false)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button>\n\t\t\t\t\t\t\tSign Up\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tAlready registered?\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<span className=\"line\">\n\t\t\t\t\t\t\t<a href=\"/login\">Sign In</a>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Register;\n","/home/ec2-user/ShoppingApp/src/Kart.jsx",[],[],"/home/ec2-user/ShoppingApp/src/CatalogList.jsx",["91","92","93","94","95","96","97"],[],"import React, { useState, useEffect } from \"react\";\nimport axios from \"./api/axios\";\nimport Header from \"./Header\";\nconst CATALOG_URL = \"/v1/catalog\";\nconst KART_URL = \"/v1/kart\";\n\nconst CatalogList = (props) => {\n    const [catalog, setCatalog] = useState([]);\n\n    /* Initial value for cartData should be placed in useState({ userid: \"\", item: [] }) \n    const [cartData, setCartData] = useState({ userid: \"\", item: [] }); */\n    const [cartData , setCartData] = useState({ userid: \"\", item: [] });\n\n    const [itemArray, setItemArray] = useState([]);\n    useEffect(() => {\n        catList();\n    }, []);\n\n    useEffect(() => {\n        sendToCart()\n    }, [itemArray.length])\n\n    const catList = async () => {\n        const response = await axios.get(CATALOG_URL)\n        //   const response = [\n        //      {\n        //         id: 1,\n        //         itemName: \"T-Shirt\",\n        //         description: \"T-Shirt For Mens\",\n        //         amount: 100,\n        //         imageUrl: \"https://edwiki-webserver-config.s3.amazonaws.com/1\",\n        //      },\n        //      {\n        //         id: 2,\n        //         itemName: \"Reebok Shoes\",\n        //         description: \"Reebok Shoes For Men\",\n        //         amount: 200,\n        //         imageUrl: \"\",\n        //      },\n        //      {\n        //         id: 3,\n        //         itemName: \"Nike Shoes\",\n        //         description: \"Nike Shoes For Men\",\n        //         amount: 250,\n        //         imageUrl: \"\",\n        //      },\n        //      {\n        //         id: 4,\n        //         itemName: \"Shirt\",\n        //         description: \"Shirt For Mens\",\n        //         amount: 400,\n        //         imageUrl: \"\",\n        //      },\n        //      {\n        //         id: 5,\n        //         itemName: \"Shirt\",\n        //         description: \"Shirt For Mens\",\n        //         amount: 400,\n        //         imageUrl: \"\",\n        //      },\n        //   ];\n        // const response = []\n        setCatalog(response.data);\n    };\n    const sendToCart = async () => {\n        if (itemArray.length) {\n            let user = JSON.parse(localStorage.getItem('user'))\n            // console.log('user',user);\n            setCartData({ userid: user?.id, item: itemArray });\n        }\n        console.log(\"cartData\", cartData);\n        if (cartData.item.length) {\n            if (cartData.item[0]?.quantity !== 0) {\n                let response = await axios.post(KART_URL, cartData, null);\n                console.log('cart response', response);\n                if (response.data) {\n                    localStorage.setItem('cartId', response.data?.id)\n                    return <div class=\"alert alert-success\" role=\"alert\">\n                        Item Added In Cart Successfully!\n                    </div>\n                }\n            }\n\n        }\n    }\n    const addToCart = async (element, quantity) => {\n        let data = {\n            itemId: element?.id,\n            quantity: quantity,\n        };\n        setItemArray([...itemArray,data]);\n        console.log('length',itemArray);\n            sendToCart()\n    };\n    const incre = (element) => {\n        if (itemArray.length) {\n            itemArray?.forEach((v) => {\n                if (v?.itemId === element?.id) {\n                    v.quantity += 1;\n                }\n                setItemArray(itemArray)\n                // setCartData({userid:1,item:itemArray})\n            });\n            sendToCart()\n        }\n    };\n    const decre = (element) => {\n        if (itemArray.length) {\n            itemArray?.forEach((v) => {\n                if (v?.itemId === element?.id) {\n                    if (v.quantity >= 1) {\n                        v.quantity = v.quantity - 1;\n                        setItemArray(itemArray)\n                    } else if (v.quantity < 1 || v.quantity == 0) {\n                        // let newArray =itemArray.pull(element)\n                        let newArray = itemArray.filter((v) => v.quantity != 0);\n                        setItemArray(newArray);\n                    }\n                }\n            });\n            sendToCart()\n        }\n    };\n\n    const isInCart = (element) => {\n\n        //this method should find the element item that is in the cart. If is found then true is returned, else false\n        return itemArray?.find((item) => item.itemId === element.id)\n            ? true\n            : false;\n    };\n\n    return (\n        <div className='container-fluid cat'>\n            <div className='row'>\n                <Header />\n            </div>\n            {catalog.length !== 0 ? (\n                <div className='row d-flex justify-content align-item flex-wrap mt-2'>\n                    {catalog.map((element) => {\n                        return (\n                            <div className='col-md-3 col mb-2' key={element.id}>\n                                <div className='card' style={{ width: \"15rem\" }}>\n                                    <img\n                                        src={element?.imageUrl}\n                                        className='img-fluid card-image'\n                                        alt=''\n                                    />\n                                    <div className='card-body'>\n                                        <h5 className='card-title'>₹{element?.amount}</h5>\n                                        <p className='card-text'>{element?.itemName}</p>\n                                        <p className='card-text'>\n                                            {element?.description}\n                                        </p>\n\n                                        {isInCart(element) ? (\n                                            <>\n                                                <a\n                                                    className='btn btn-outline-danger me-2'\n                                                    onClick={() => decre(element)}\n                                                >\n                                                    -\n                                                </a>\n                                                <a\n                                                    className='btn btn-outline-primary'\n                                                    onClick={() => incre(element)}\n                                                >\n                                                    +\n                                                </a>\n                                                {itemArray.map((item) => item?.quantity && item.itemId == element.id ? <label className=\"ms-2\" key={item?.itemId}>{item?.quantity}</label> : <label className=\"ms-2\" key={item?.itemId}>0</label>)}\n                                            </>\n                                        ) : (<a\n                                            onClick={() => addToCart(element, 1)}\n                                            className='btn btn-outline-primary'\n                                        >\n                                            Add To Cart\n                                        </a>)}\n\n\n                                    </div>\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            ) : (\n                <></>\n            )}\n        </div>\n    );\n};\n\nexport default CatalogList;","/home/ec2-user/ShoppingApp/src/Order.jsx",[],[],"/home/ec2-user/ShoppingApp/src/Payment.jsx",["98","99"],[],"import React, { useState,useEffect } from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from './api/axios';\nconst PAYMENT_URL = '/v1/payment'\nconst ORDER_URL = '/v1/order'\n\nconst Payment = (props) => {\n  const location = useLocation()\n  const navigate = useNavigate()\n  console.log('state', location.state);\n  const [payment = { cardHolder: '', cardNumber: '', validation: '', cvv: '' }, setPayment] = useState();\n  const [upi, setUPI] = useState()\n  const [modeValue, setModeValue] = useState('Select Mode')\n  const [cartData,setCartData] = useState()\n  useEffect(() => {\n    setCartData(location.state?.element)\n  }, [!cartData])\n  \n  const onPayment = async (event) => {\n    try {\n      event.preventDefault()\n      console.log('payment', payment);\n      // navigate('/order',{state:{paymentid:1}})\n      let kartId = JSON.parse(localStorage.getItem('cartId'))\n      let user = JSON.parse(localStorage.getItem('user'));\n      let data ={\n        kartId:kartId,\n        cardHolder:payment?.cardHolder,\n        cardNumber:payment?.cardNumber,\n        validation:payment?.validation,\n        cvv:payment?.cvv,\n        mode:'CARD',\n      }\n      let paymentresponse = await axios.post(PAYMENT_URL, data, null);\n      if (paymentresponse) {\n        let orderdata ={\n          paymentId:paymentresponse?.data?.id,\n          userId:user.id,\n          item:cartData?.item\n        }\n        let response = await axios.post(ORDER_URL, orderdata, null);\n        if (response) {\n          navigate('/success');\n        }\n      }\n      \n      \n    } catch (error) {\n      console.log('paymentError', error);\n    }\n  }\n  const onUpiPayment = async() => {\n    try {\n      let kartId = JSON.parse(localStorage.getItem('cartId'))\n      let user = JSON.parse(localStorage.getItem('user'));\n      let data ={\n        kartId:kartId,\n        mode:'UPI',\n      }\n      let paymentresponse = await axios.post(PAYMENT_URL, data, null);\n      if (paymentresponse) {\n        let orderdata ={\n          paymentId:paymentresponse?.data?.id,\n          userId:user.id,\n          vpa:upi,\n          item:cartData?.item\n        }\n        let response = await axios.post(ORDER_URL, orderdata, null);\n        if (response) {\n          navigate('/success');\n        }\n      }\n    } catch (error) {\n      console.log('upiError', error);\n    }\n  }\n  const onCodPayment = async() => {\n    try {\n      let kartId = JSON.parse(localStorage.getItem('cartId'))\n      let user = JSON.parse(localStorage.getItem('user'));\n      let data ={\n        kartId:kartId,\n        mode:'COD',\n      }\n      let paymentresponse = await axios.post(PAYMENT_URL, data, null);\n      if (paymentresponse) {\n        let orderdata ={\n          paymentId:paymentresponse?.data?.id,\n          userId:user.id,\n          item:cartData?.item\n        }\n        let response = await axios.post(ORDER_URL, orderdata, null);\n        if (response) {\n          navigate('/success');\n        }\n      }\n      \n    } catch (error) {\n      console.log('codError', error);\n    }\n  }\n  const handleChange = (e) => {\n    console.log('e', e.target.value);\n    setModeValue(e.target.value);\n  };\n  return (\n    <div className='container'>\n      <div className=\"row\">\n        <div className=\"col-md-12 d-flex justify-content-center align-item-center\">\n          <div className=\"card\">\n            <div className=\"body\">\n              {modeValue === 'CARD' ? <form className='p-2' onSubmit={onPayment}>\n                <div className=\"form-group\">\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Card holder*</label>\n                    <input type=\"text\" value={payment?.cardHolder} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" required onChange={(ch) => setPayment({ ...payment, cardHolder: ch.target.value })} />\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Credt/debt card number*</label>\n                    <input type=\"text\" value={payment?.cardNumber} className=\"form-control\" id=\"exampleInputPassword1\" required onChange={(cn) => setPayment({ ...payment, cardNumber: cn.target.value })} />\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <div className=\"mb-3 col\">\n                    <label className=\"form-check-label\" htmlFor=\"expire\">Expriration month and year*</label>\n                    <input type=\"text\" value={payment?.validation} className=\"form-control\" id=\"expire\" maxLength={5} required onChange={(my) => setPayment({ ...payment, validation: my.target.value })} />\n                  </div>\n                  <div className=\"mb-3 col\">\n                    <label className=\"form-check-label\" htmlFor=\"cvc\">CVC*</label>\n                    <input type=\"text\" value={payment?.cvv} className=\"form-control\" id=\"cvc\" maxLength={3} required onChange={(cv) => setPayment({ ...payment, cvv: cv.target.value })} />\n                  </div>\n                </div>\n                <button type=\"submit\" className=\"btn btn-outline-primary\">Submit</button>\n              </form> : modeValue === 'UPI' ? <div className='d-flex flex-column justify-content-center align-item-center p-2'>\n                <input type='text' value={upi} onChange={(text) => setUPI(text.target.value)} placeholder='Enter your upi id'/>\n                <button className='btn btn-outline-primary' onClick={() => onUpiPayment()}>Submit</button>\n              </div> : modeValue === 'COD' ?<div className='p-2'><button className='btn btn-outline-primary mb-n2' onClick={() => onCodPayment()}>COD</button></div>: <div className=\"form-floating\">\n                <select className=\"form-select\" id=\"floatingSelect\" aria-label=\"Floating label select example\" value={modeValue} onChange={handleChange}>\n                  <option>{modeValue}</option>\n                  <option value=\"CARD\">CARD</option>\n                  <option value=\"UPI\">UPI</option>\n                  <option value=\"COD\">COD</option>\n                </select>\n              </div>}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Payment\n","/home/ec2-user/ShoppingApp/src/Success.jsx",["100"],[],"import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nconst Success = () => {\n    const navigate = useNavigate()\n    return (\n        <div>\n            <div className='card p-4'>\n            <h1 className='text-center mb-4'>Payment Successfully Done!</h1>\n            <a onClick={()=>navigate('/')} className='btn btn-outline-primary'>Done</a>\n            </div>\n        </div>\n    )\n}\n\nexport default Success","/home/ec2-user/ShoppingApp/src/Profile.jsx",["101","102","103"],[],"import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport axios from './api/axios'\nimport Header from './Header'\nconst ORDER_URL = '/v1/order/user'\n\nconst Profile = () => {\n    const [order, setOrder] = useState()\n    let [userData, setUserData] = useState()\n    useEffect(() => {\n        getUser()\n    }, [!userData])\n\n    const getUser = () => {\n        let response = JSON.parse(localStorage.getItem('user'));\n        setUserData(response)\n    }\n    useEffect(() => {\n        orderList()\n    }, [!order])\n\n    const navigate = useNavigate()\n    const orderList = async () => {\n        let user = JSON.parse(localStorage.getItem('user'));\n        const response = await axios.get(`${ORDER_URL}/${user?.id}`)\n        console.log('orders', response);\n        // const response = [\n        //     {\n        //         id: 1,\n        //         amount: 200,\n        //         imageUrl: '',\n        //         itemName: 'Reebok shoes',\n        //         description: 'This is reebok shoes'\n        //     }\n        // ]\n        setOrder(response.data)\n    }\n    return (\n        <div className='container-fluid profile-container'>\n            <Header />\n            <div className=\"row\">\n                <div className=\"col-md-12 profile-head\">\n                    <p><b>Welcome {userData?.username}</b> | {userData?.email}</p>\n                </div>\n                <div className=\"col-md-12\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h5 className='text-center'>Your Orders</h5>\n                        </div>\n                    </div>\n                    {/* <div className=\"row\">\n                        {order ? order.map(element => {\n                            return (<div className='col-md-3 mb-2' key={element?.id}>\n                                <div className=\"card\" style={{ width: \"15rem\" }}>\n                                    <img src={element?.imageUrl} className=\"img-fluid card-image\" alt=\"\" />\n                                    <div className=\"card-body\">\n                                        <h5 className=\"card-title\">₹{element?.amount}</h5>\n                                        <p className=\"card-text\">{element?.itemName}</p>\n                                        <p className=\"card-text\">{element?.description}</p>\n                                        <a className='btn btn-outline-primary' onClick={() => navigate('/order')}>Order Details</a>\n                                    </div>\n                                </div>\n                            </div>)\n                        }) : <></>}\n                    </div> */}\n                    <div className='row'>\n                        <div className=\"col-md-12 p-2\">\n                            <table className='table'>\n                                <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                        <th>Price</th>\n                                        <th>Quantity</th>\n                                        <th>Total</th>\n                                        <th>Action</th>\n                                    </tr>\n                                </thead>\n                                {\n                                    order === undefined ? <tbody>\n                                        <tr>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                        </tr>\n                                    </tbody> : <tbody>\n                                        {\n                                            order ? order.map((element) => {\n                                                console.log('element order',element);\n                                               return element?.item.map(item=>{\n                                                    return (<tr key={item?.id}>\n                                                        <td>{item?.itemName}</td>\n                                                        <td>{item?.cost}</td>\n                                                        <td>{item?.quantity}</td>\n                                                        <td>{item?.price}</td>\n                                                        <td><a className='btn btn-outline-primary' onClick={() => navigate('/order')}>Track</a></td>\n                                                    </tr>)\n                                                })\n                                                \n                                            }) : <></>\n                                        }\n                                    </tbody>\n                                }\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Profile\n","/home/ec2-user/ShoppingApp/src/api/axios.js",[],[],"/home/ec2-user/ShoppingApp/src/Header.jsx",["104","105","106","107","108","109","110","111","112"],[],"import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom';\n\nconst Header = () => {\n    let [user, setUser] = useState()\n    useEffect(() => {\n        getUser()\n    }, [!user])\n\n    const getUser = () => {\n        let user = JSON.parse(localStorage.getItem('user'));\n        setUser(user)\n    }\n\n    const navigate = useNavigate()\n    const insertToCatalog = () => {\n        navigate('/catalog-add')\n    }\n    const navigateToCart = () => {\n        navigate('/kart')\n    }\n    const navigateToLogin = () => {\n        localStorage.clear()\n        navigate('/Login')\n    }\n    return (\n        <nav className=\"navbar navbar-expand-lg\">\n            <div className=\"container-fluid\">\n                {/* <a className=\"navbar-brand\" onClick={()=>navigate('/catalog')}>Shopping.com</a> */}\n                <img src='https://edwiki-webserver-config.s3.amazonaws.com/logo.png' alt=\"logo\" onClick={() => navigate('/catalog')} className=\"navbar-brand\" />\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link active\" aria-current=\"page\" onClick={() => navigate('/')}>Home</a>\n                        </li>\n                        {/* <li className=\"nav-item\">\n                            <a className=\"nav-link active\" aria-current=\"page\" onClick={() => insertToCatalog()}>Add Catalog Item</a>\n                        </li> */}\n                        {user?.username === 'admin' ?<>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link active\" aria-current=\"page\" onClick={() => insertToCatalog()}>Add Catalog Item</a>\n                        </li>\n                        </> : <></>}\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" onClick={() => navigateToCart()}>Cart</a>\n                        </li>\n                        {user?<>\n                            <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                                Account\n                            </a>\n                            <ul className=\"dropdown-menu\">\n                                <li><a className=\"dropdown-item\" onClick={() => navigate('/profile')}>Profile</a></li>\n                                <li><a className=\"dropdown-item\" onClick={() => navigateToLogin()}>Logout</a></li>\n                            </ul>\n                        </li>\n                        </>:<>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" onClick={() => navigate('/login')}>Sign In</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" onClick={() => navigate('/signup')}>Sign Up</a>\n                        </li>\n                        </>}\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nexport default Header",{"ruleId":"113","severity":1,"message":"114","line":1,"column":39,"nodeType":"115","messageId":"116","endLine":1,"endColumn":49},{"ruleId":"113","severity":1,"message":"117","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":19},{"ruleId":"118","severity":1,"message":"119","line":45,"column":22,"nodeType":"120","messageId":"121","endLine":45,"endColumn":24},{"ruleId":"113","severity":1,"message":"114","line":1,"column":39,"nodeType":"115","messageId":"116","endLine":1,"endColumn":49},{"ruleId":"113","severity":1,"message":"117","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":19},{"ruleId":"113","severity":1,"message":"122","line":16,"column":9,"nodeType":"115","messageId":"116","endLine":16,"endColumn":16},{"ruleId":"113","severity":1,"message":"123","line":16,"column":18,"nodeType":"115","messageId":"116","endLine":16,"endColumn":28},{"ruleId":"113","severity":1,"message":"124","line":11,"column":9,"nodeType":"115","messageId":"116","endLine":11,"endColumn":18},{"ruleId":"113","severity":1,"message":"125","line":14,"column":9,"nodeType":"115","messageId":"116","endLine":14,"endColumn":17},{"ruleId":"113","severity":1,"message":"126","line":17,"column":9,"nodeType":"115","messageId":"116","endLine":17,"endColumn":19},{"ruleId":"113","severity":1,"message":"127","line":20,"column":9,"nodeType":"115","messageId":"116","endLine":20,"endColumn":20},{"ruleId":"128","severity":1,"message":"129","line":21,"column":8,"nodeType":"130","endLine":21,"endColumn":26,"suggestions":"131"},{"ruleId":"118","severity":1,"message":"119","line":114,"column":61,"nodeType":"120","messageId":"121","endLine":114,"endColumn":63},{"ruleId":"118","severity":1,"message":"132","line":116,"column":75,"nodeType":"120","messageId":"121","endLine":116,"endColumn":77},{"ruleId":"133","severity":1,"message":"134","line":158,"column":49,"nodeType":"135","endLine":161,"endColumn":50},{"ruleId":"133","severity":1,"message":"134","line":164,"column":49,"nodeType":"135","endLine":167,"endColumn":50},{"ruleId":"118","severity":1,"message":"119","line":170,"column":104,"nodeType":"120","messageId":"121","endLine":170,"endColumn":106},{"ruleId":"133","severity":1,"message":"134","line":172,"column":46,"nodeType":"135","endLine":175,"endColumn":42},{"ruleId":"128","severity":1,"message":"136","line":17,"column":6,"nodeType":"130","endLine":17,"endColumn":17,"suggestions":"137"},{"ruleId":"128","severity":1,"message":"138","line":17,"column":7,"nodeType":"139","endLine":17,"endColumn":16},{"ruleId":"133","severity":1,"message":"134","line":10,"column":13,"nodeType":"135","endLine":10,"endColumn":80},{"ruleId":"128","severity":1,"message":"138","line":12,"column":9,"nodeType":"139","endLine":12,"endColumn":18},{"ruleId":"128","severity":1,"message":"138","line":20,"column":9,"nodeType":"139","endLine":20,"endColumn":15},{"ruleId":"133","severity":1,"message":"134","line":97,"column":61,"nodeType":"135","endLine":97,"endColumn":135},{"ruleId":"128","severity":1,"message":"138","line":8,"column":9,"nodeType":"139","endLine":8,"endColumn":14},{"ruleId":"133","severity":1,"message":"134","line":37,"column":29,"nodeType":"135","endLine":37,"endColumn":110},{"ruleId":"133","severity":1,"message":"134","line":44,"column":29,"nodeType":"135","endLine":44,"endColumn":114},{"ruleId":"133","severity":1,"message":"134","line":48,"column":29,"nodeType":"135","endLine":48,"endColumn":86},{"ruleId":"133","severity":1,"message":"140","line":52,"column":29,"nodeType":"135","endLine":52,"endColumn":140},{"ruleId":"133","severity":1,"message":"134","line":56,"column":37,"nodeType":"135","endLine":56,"endColumn":103},{"ruleId":"133","severity":1,"message":"134","line":57,"column":37,"nodeType":"135","endLine":57,"endColumn":100},{"ruleId":"133","severity":1,"message":"134","line":62,"column":29,"nodeType":"135","endLine":62,"endColumn":88},{"ruleId":"133","severity":1,"message":"134","line":65,"column":29,"nodeType":"135","endLine":65,"endColumn":89},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'CatalogList' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'success' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","'userFocus' is assigned a value but never used.","'pwdFocus' is assigned a value but never used.","'emailFocus' is assigned a value but never used.","'mobileFocus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sendToCart'. Either include it or remove the dependency array.","ArrayExpression",["141"],"Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'location.state?.element'. Either include it or remove the dependency array.",["142"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","UnaryExpression","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [itemArray.length, sendToCart]",{"range":"147","text":"148"},"Update the dependencies array to be: [location.state?.element]",{"range":"149","text":"150"},[658,676],"[itemArray.length, sendToCart]",[655,666],"[location.state?.element]"]