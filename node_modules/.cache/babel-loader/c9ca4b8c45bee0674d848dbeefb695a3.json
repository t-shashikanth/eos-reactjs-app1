{"ast":null,"code":"var _jsxFileName = \"/Users/vinaysharma/Work/ReactJs/ShoppingApp/src/CatalogList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"./api/axios\";\nimport Header from \"./Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CATALOG_URL = \"/v1/catalog\";\nconst KART_URL = \"/v1/kart\";\n\nconst CatalogList = props => {\n  _s();\n\n  const [catalog, setCatalog] = useState([]);\n  /* Initial value for cartData should be placed in useState({ userid: \"\", item: [] }) \n  const [cartData, setCartData] = useState({ userid: \"\", item: [] }); */\n\n  const [cartData = {\n    userid: \"\",\n    item: []\n  }, setCartData] = useState();\n  const [itemArray, setItemArray] = useState([]);\n  const [cloneCatalogState, setcloneCatalogState] = useState([]);\n  useEffect(() => {\n    catList();\n  }, []);\n  useEffect(() => {\n    sendToCart();\n  }, [itemArray.length]);\n\n  const catList = async () => {\n    const response = await axios.get(CATALOG_URL); //   const response = [\n    //      {\n    //         id: 1,\n    //         itemName: \"T-Shirt\",\n    //         description: \"T-Shirt For Mens\",\n    //         amount: 100,\n    //         imageUrl: \"https://edwiki-webserver-config.s3.amazonaws.com/1\",\n    //      },\n    //      {\n    //         id: 2,\n    //         itemName: \"Reebok Shoes\",\n    //         description: \"Reebok Shoes For Men\",\n    //         amount: 200,\n    //         imageUrl: \"\",\n    //      },\n    //      {\n    //         id: 3,\n    //         itemName: \"Nike Shoes\",\n    //         description: \"Nike Shoes For Men\",\n    //         amount: 250,\n    //         imageUrl: \"\",\n    //      },\n    //      {\n    //         id: 4,\n    //         itemName: \"Shirt\",\n    //         description: \"Shirt For Mens\",\n    //         amount: 400,\n    //         imageUrl: \"\",\n    //      },\n    //      {\n    //         id: 5,\n    //         itemName: \"Shirt\",\n    //         description: \"Shirt For Mens\",\n    //         amount: 400,\n    //         imageUrl: \"\",\n    //      },\n    //   ];\n    // const response = []\n\n    setCatalog(response.data);\n  };\n\n  useEffect(() => {\n    setcloneCatalogState(JSON.parse(JSON.stringify(catalog)));\n  }, [catalog]);\n  console.log(cloneCatalogState);\n\n  const sendToCart = async () => {\n    console.log('itemArray', itemArray);\n\n    if (itemArray.length) {\n      console.log(\"ItemArray in cart\", itemArray);\n      let user = JSON.parse(localStorage.getItem('user')); // console.log('user',user);\n\n      setCartData({\n        userid: user === null || user === void 0 ? void 0 : user.id,\n        item: itemArray\n      });\n    }\n\n    console.log(\"cartData\", cartData);\n\n    if (cartData.item.length) {\n      let response = await axios.post(KART_URL, cartData, null);\n      console.log('cart response', response);\n\n      if (response.data) {\n        var _response$data;\n\n        localStorage.setItem('cartId', (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.id);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"alert alert-success\",\n          role: \"alert\",\n          children: \"Item Added In Cart Successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 24\n        }, this);\n      }\n    }\n  };\n\n  const addToCart = async (element, quantity) => {\n    console.log(\"data\", element, quantity);\n    let data = {\n      itemId: element === null || element === void 0 ? void 0 : element.id,\n      quantity: quantity\n    };\n    setItemArray([...itemArray, data]);\n    console.log('cart item', itemArray); //   toggleProductQuantity(element);\n  };\n\n  const addToCart2 = async element => {\n    cloneCatalogState === null || cloneCatalogState === void 0 ? void 0 : cloneCatalogState.forEach(v => {\n      if (v.id == element.id) {\n        v.quantity = 1;\n      }\n\n      setcloneCatalogState(cloneCatalogState);\n    });\n  };\n\n  const incre = element => {\n    console.log('element');\n\n    if (cloneCatalogState.length) {\n      cloneCatalogState === null || cloneCatalogState === void 0 ? void 0 : cloneCatalogState.forEach(v => {\n        console.log(\"elev\", v);\n\n        if ((v === null || v === void 0 ? void 0 : v.id) === (element === null || element === void 0 ? void 0 : element.id)) {\n          v.quantity += 1;\n        }\n\n        console.log(\"element\", itemArray); // setCartData({userid:1,item:itemArray})\n      }); // setcloneCatalogState([])\n\n      console.log('55555555', cloneCatalogState); // setTimeout(() => {\n\n      setcloneCatalogState(cloneCatalogState); // }, 2000);\n      //console.log('itemArra_ncre', itemArray)\n      //setItemArray(itemArray)\n      // sendToCart()\n    }\n  };\n\n  const decre = element => {\n    if (cloneCatalogState.length) {\n      cloneCatalogState === null || cloneCatalogState === void 0 ? void 0 : cloneCatalogState.forEach(v => {\n        console.log(\"elem\", v);\n\n        if ((v === null || v === void 0 ? void 0 : v.id) === (element === null || element === void 0 ? void 0 : element.id)) {\n          if (v.quantity >= 1) {\n            v.quantity = v.quantity - 1;\n          } else if (v.quantity < 1) {\n            let newArray = cloneCatalogState.filter(v => v.quantity != 0);\n            console.log('newArray', newArray);\n            setItemArray(newArray);\n          }\n\n          console.log(\"v\", itemArray);\n        }\n      });\n      sendToCart();\n    }\n  };\n\n  const isInCart = element => {\n    //this method should find the element item that is in the cart. If is found then true is returned, else false\n    return itemArray !== null && itemArray !== void 0 && itemArray.find(item => item.itemId === element.id) ? true : false;\n  }; // allArr + itemArr\n\n\n  const switchView = obj => {\n    //    const itemObj = itemArray?.find((item) => item.itemId === obj.id) || obj;\n    if (obj !== null && obj !== void 0 && obj.quantity) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: obj.quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"btn btn-outline-danger me-2\",\n          onClick: () => decre(obj),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"btn btn-outline-primary\",\n          onClick: () => incre(obj),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => addToCart2(obj),\n        className: \"btn btn-outline-primary\",\n        children: \"Add To Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid cat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), cloneCatalogState.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex justify-content align-item flex-wrap mt-2\",\n      children: cloneCatalogState.map(element => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3 col mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            style: {\n              width: \"15rem\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: element === null || element === void 0 ? void 0 : element.imageUrl,\n              className: \"img-fluid card-image\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: [\"\\u20B9\", element === null || element === void 0 ? void 0 : element.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: element === null || element === void 0 ? void 0 : element.itemName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: element === null || element === void 0 ? void 0 : element.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 41\n              }, this), switchView(element)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 33\n          }, this)\n        }, element.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CatalogList, \"rKfeQqtdboFUgHDsb1R9zNTHeds=\");\n\n_c = CatalogList;\nexport default CatalogList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CatalogList\");","map":{"version":3,"sources":["/Users/vinaysharma/Work/ReactJs/ShoppingApp/src/CatalogList.jsx"],"names":["React","useState","useEffect","axios","Header","CATALOG_URL","KART_URL","CatalogList","props","catalog","setCatalog","cartData","userid","item","setCartData","itemArray","setItemArray","cloneCatalogState","setcloneCatalogState","catList","sendToCart","length","response","get","data","JSON","parse","stringify","console","log","user","localStorage","getItem","id","post","setItem","addToCart","element","quantity","itemId","addToCart2","forEach","v","incre","decre","newArray","filter","isInCart","find","switchView","obj","map","width","imageUrl","amount","itemName","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"./api/axios\";\nimport Header from \"./Header\";\nconst CATALOG_URL = \"/v1/catalog\";\nconst KART_URL = \"/v1/kart\";\n\nconst CatalogList = (props) => {\n    const [catalog, setCatalog] = useState([]);\n\n    /* Initial value for cartData should be placed in useState({ userid: \"\", item: [] }) \n    const [cartData, setCartData] = useState({ userid: \"\", item: [] }); */\n    const [cartData = { userid: \"\", item: [] }, setCartData] = useState();\n    const [itemArray, setItemArray] = useState([]);\n    const [cloneCatalogState, setcloneCatalogState] = useState([]);\n\n    useEffect(() => {\n        catList();\n    }, []);\n\n    useEffect(() => {\n        sendToCart()\n    }, [itemArray.length])\n\n    const catList = async () => {\n        const response = await axios.get(CATALOG_URL)\n        //   const response = [\n        //      {\n        //         id: 1,\n        //         itemName: \"T-Shirt\",\n        //         description: \"T-Shirt For Mens\",\n        //         amount: 100,\n        //         imageUrl: \"https://edwiki-webserver-config.s3.amazonaws.com/1\",\n        //      },\n        //      {\n        //         id: 2,\n        //         itemName: \"Reebok Shoes\",\n        //         description: \"Reebok Shoes For Men\",\n        //         amount: 200,\n        //         imageUrl: \"\",\n        //      },\n        //      {\n        //         id: 3,\n        //         itemName: \"Nike Shoes\",\n        //         description: \"Nike Shoes For Men\",\n        //         amount: 250,\n        //         imageUrl: \"\",\n        //      },\n        //      {\n        //         id: 4,\n        //         itemName: \"Shirt\",\n        //         description: \"Shirt For Mens\",\n        //         amount: 400,\n        //         imageUrl: \"\",\n        //      },\n        //      {\n        //         id: 5,\n        //         itemName: \"Shirt\",\n        //         description: \"Shirt For Mens\",\n        //         amount: 400,\n        //         imageUrl: \"\",\n        //      },\n        //   ];\n        // const response = []\n        setCatalog(response.data);\n    };\n\n    useEffect(() => {\n        setcloneCatalogState(JSON.parse(JSON.stringify(catalog)))\n    }, [catalog])\n    \n\n    \n\n   console.log(cloneCatalogState)\n\n    const sendToCart = async () => {\n        console.log('itemArray', itemArray);\n        if (itemArray.length) {\n            console.log(\"ItemArray in cart\", itemArray);\n            let user = JSON.parse(localStorage.getItem('user'))\n            // console.log('user',user);\n            setCartData({ userid: user?.id, item: itemArray });\n        }\n        console.log(\"cartData\", cartData);\n        if (cartData.item.length) {\n            let response = await axios.post(KART_URL, cartData, null);\n            console.log('cart response', response);\n            if (response.data) {\n                localStorage.setItem('cartId', response.data?.id)\n                return <div class=\"alert alert-success\" role=\"alert\">\n                    Item Added In Cart Successfully!\n                </div>\n            }\n        }\n    }\n    const addToCart = async (element, quantity) => {\n        console.log(\"data\", element, quantity);\n        let data = {\n            itemId: element?.id,\n            quantity: quantity,\n        };\n        setItemArray([...itemArray, data]);\n        console.log('cart item', itemArray);\n\n        //   toggleProductQuantity(element);\n    };\n\n    const addToCart2 = async (element) => {\n        cloneCatalogState?.forEach(v => {\n            \n            if(v.id == element.id){\n              v.quantity = 1;\n            }\n\n        setcloneCatalogState(cloneCatalogState);\n\n        });\n    };\n\n    const incre = (element) => {\n        console.log('element');\n        if (cloneCatalogState.length) {\n            cloneCatalogState?.forEach((v) => {\n                console.log(\"elev\", v);\n                if (v?.id === element?.id) {\n                    v.quantity += 1;\n                }\n                console.log(\"element\", itemArray);\n                // setCartData({userid:1,item:itemArray})\n            });\n\n            // setcloneCatalogState([])\nconsole.log('55555555', cloneCatalogState)\n            // setTimeout(() => {\n                setcloneCatalogState(cloneCatalogState);\n            // }, 2000);\n             //console.log('itemArra_ncre', itemArray)\n\n            //setItemArray(itemArray)\n            // sendToCart()\n        }\n    };\n    const decre = (element) => {\n\n\n        if (cloneCatalogState.length) {\n            cloneCatalogState?.forEach((v) => {\n                console.log(\"elem\", v);\n                if (v?.id === element?.id) {\n                    if (v.quantity >= 1) {\n                        v.quantity = v.quantity - 1;\n                    } else if (v.quantity < 1) {\n                        let newArray = cloneCatalogState.filter((v) => v.quantity != 0);\n                        console.log('newArray', newArray);\n                        setItemArray(newArray);\n                    }\n                    console.log(\"v\", itemArray);\n                }\n            });\n            sendToCart()\n        }\n    };\n\n    const isInCart = (element) => {\n\n        //this method should find the element item that is in the cart. If is found then true is returned, else false\n        return itemArray?.find((item) => item.itemId === element.id)\n            ? true\n            : false;\n    };\n\n    // allArr + itemArr\n    const switchView = (obj) => {\n\n    //    const itemObj = itemArray?.find((item) => item.itemId === obj.id) || obj;\n\n        if (obj?.quantity) {\n            return <>\n                <input type=\"text\" value={obj.quantity} />\n                <a\n                    className='btn btn-outline-danger me-2'\n                    onClick={() => decre(obj)}\n                >\n                    -\n                </a>\n                <a\n                    className='btn btn-outline-primary'\n                    onClick={() => incre(obj)}\n                >\n                    +\n                </a>\n            </>\n\n        } else {\n          return  <a\n                onClick={() => addToCart2(obj)}\n                className='btn btn-outline-primary'\n            >\n                Add To Cart\n            </a>\n        }\n\n\n    }\n\n\n    return (\n        <div className='container-fluid cat'>\n            <div className='row'>\n                <Header />\n            </div>\n            {cloneCatalogState.length !== 0 ? (\n                <div className='row d-flex justify-content align-item flex-wrap mt-2'>\n                    {cloneCatalogState.map((element) => {\n                        return (\n                            <div className='col-md-3 col mb-2' key={element.id}>\n                                <div className='card' style={{ width: \"15rem\" }}>\n                                    <img\n                                        src={element?.imageUrl}\n                                        className='img-fluid card-image'\n                                        alt=''\n                                    />\n                                    <div className='card-body'>\n                                        <h5 className='card-title'>₹{element?.amount}</h5>\n                                        <p className='card-text'>{element?.itemName}</p>\n                                        <p className='card-text'>\n                                            {element?.description}\n                                        </p>\n                                        {switchView(element)}\n                                    </div>\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            ) : (\n                <></>\n            )}\n        </div>\n    );\n};\n\nexport default CatalogList;"]},"metadata":{},"sourceType":"module"}