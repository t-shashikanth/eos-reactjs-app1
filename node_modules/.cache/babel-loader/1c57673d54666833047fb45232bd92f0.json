{"ast":null,"code":"var _jsxFileName = \"/Users/vinaysharma/Work/ReactJs/ShoppingApp/src/CatalogList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"./api/axios\";\nimport Header from \"./Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CATALOG_URL = \"/v1/catalog\";\nconst KART_URL = \"/v1/kart\";\n\nconst CatalogList = props => {\n  _s();\n\n  const [catalog, setCatalog] = useState([]);\n  /* Initial value for cartData should be placed in useState({ userid: \"\", item: [] }) \n  const [cartData, setCartData] = useState({ userid: \"\", item: [] }); */\n\n  const [cartData = {\n    userid: \"\",\n    item: []\n  }, setCartData] = useState();\n  const [itemArray, setItemArray] = useState([]);\n  useEffect(() => {\n    catList();\n  }, []);\n  useEffect(() => {\n    sendToCart();\n  }, [itemArray.length]);\n\n  const catList = async () => {\n    const response = await axios.get(CATALOG_URL); //   const response = [\n    //      {\n    //         id: 1,\n    //         itemName: \"T-Shirt\",\n    //         description: \"T-Shirt For Mens\",\n    //         amount: 100,\n    //         imageUrl: \"https://edwiki-webserver-config.s3.amazonaws.com/1\",\n    //      },\n    //      {\n    //         id: 2,\n    //         itemName: \"Reebok Shoes\",\n    //         description: \"Reebok Shoes For Men\",\n    //         amount: 200,\n    //         imageUrl: \"\",\n    //      },\n    //      {\n    //         id: 3,\n    //         itemName: \"Nike Shoes\",\n    //         description: \"Nike Shoes For Men\",\n    //         amount: 250,\n    //         imageUrl: \"\",\n    //      },\n    //      {\n    //         id: 4,\n    //         itemName: \"Shirt\",\n    //         description: \"Shirt For Mens\",\n    //         amount: 400,\n    //         imageUrl: \"\",\n    //      },\n    //      {\n    //         id: 5,\n    //         itemName: \"Shirt\",\n    //         description: \"Shirt For Mens\",\n    //         amount: 400,\n    //         imageUrl: \"\",\n    //      },\n    //   ];\n    // const response = []\n\n    setCatalog(response.data);\n  };\n\n  const sendToCart = async () => {\n    console.log('itemArray', itemArray);\n\n    if (itemArray.length) {\n      console.log(\"ItemArray in cart\", itemArray);\n      let user = JSON.parse(localStorage.getItem('user')); // console.log('user',user);\n\n      setCartData({\n        userid: user === null || user === void 0 ? void 0 : user.id,\n        item: itemArray\n      });\n    }\n\n    console.log(\"cartData\", cartData);\n\n    if (cartData.item.length) {\n      let response = await axios.post(KART_URL, cartData, null);\n      console.log('cart response', response);\n\n      if (response.data) {\n        var _response$data;\n\n        localStorage.setItem('cartId', (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.id);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"alert alert-success\",\n          role: \"alert\",\n          children: \"Item Added In Cart Successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 24\n        }, this);\n      }\n    }\n  };\n\n  const addToCart = async (element, quantity) => {\n    console.log(\"data\", element, quantity);\n    let data = {\n      itemId: element === null || element === void 0 ? void 0 : element.id,\n      quantity: quantity\n    };\n    setItemArray([...itemArray, data]);\n    console.log('cart item', itemArray); //   toggleProductQuantity(element);\n  };\n\n  const incre = element => {\n    if (itemArray.length) {\n      itemArray === null || itemArray === void 0 ? void 0 : itemArray.forEach(v => {\n        console.log(\"elev\", v);\n\n        if ((v === null || v === void 0 ? void 0 : v.itemId) === (element === null || element === void 0 ? void 0 : element.id)) {\n          v.quantity += 1;\n        }\n\n        console.log(\"element\", itemArray); // setCartData({userid:1,item:itemArray})\n      });\n      sendToCart();\n    }\n  };\n\n  const decre = element => {\n    if (itemArray.length) {\n      itemArray === null || itemArray === void 0 ? void 0 : itemArray.forEach(v => {\n        console.log(\"elem\", v);\n\n        if ((v === null || v === void 0 ? void 0 : v.itemId) === (element === null || element === void 0 ? void 0 : element.id)) {\n          if (v.quantity >= 1) {\n            v.quantity = v.quantity - 1;\n          } else if (v.quantity < 1) {\n            let newArray = itemArray.filter(v => v.quantity != 0);\n            console.log('newArray', newArray);\n            setItemArray(newArray);\n          }\n\n          console.log(\"v\", itemArray);\n        }\n      });\n      sendToCart();\n    }\n  };\n\n  const isInCart = element => {\n    //this method should find the element item that is in the cart. If is found then true is returned, else false\n    return itemArray !== null && itemArray !== void 0 && itemArray.find(item => item.itemId === element.id) ? true : false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid cat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), catalog.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex justify-content align-item flex-wrap mt-2\",\n      children: catalog.map(element => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3 col mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            style: {\n              width: \"15rem\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: element === null || element === void 0 ? void 0 : element.imageUrl,\n              className: \"img-fluid card-image\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: [\"\\u20B9\", element === null || element === void 0 ? void 0 : element.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: element === null || element === void 0 ? void 0 : element.itemName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: element === null || element === void 0 ? void 0 : element.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 41\n              }, this), isInCart(element) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"btn btn-outline-danger me-2\",\n                  onClick: () => decre(element),\n                  children: \"Sub\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"btn btn-outline-primary\",\n                  onClick: () => incre(element),\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: () => addToCart(element, 1),\n                className: \"btn btn-outline-primary\",\n                children: \"Add To Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 46\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 33\n          }, this)\n        }, element.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CatalogList, \"hIKj/+RJPELnptT51h19Gf1auMQ=\");\n\n_c = CatalogList;\nexport default CatalogList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CatalogList\");","map":{"version":3,"sources":["/Users/vinaysharma/Work/ReactJs/ShoppingApp/src/CatalogList.jsx"],"names":["React","useState","useEffect","axios","Header","CATALOG_URL","KART_URL","CatalogList","props","catalog","setCatalog","cartData","userid","item","setCartData","itemArray","setItemArray","catList","sendToCart","length","response","get","data","console","log","user","JSON","parse","localStorage","getItem","id","post","setItem","addToCart","element","quantity","itemId","incre","forEach","v","decre","newArray","filter","isInCart","find","map","width","imageUrl","amount","itemName","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"./api/axios\";\nimport Header from \"./Header\";\nconst CATALOG_URL = \"/v1/catalog\";\nconst KART_URL = \"/v1/kart\";\n\nconst CatalogList = (props) => {\n    const [catalog, setCatalog] = useState([]);\n\n    /* Initial value for cartData should be placed in useState({ userid: \"\", item: [] }) \n    const [cartData, setCartData] = useState({ userid: \"\", item: [] }); */\n    const [cartData = { userid: \"\", item: [] }, setCartData] = useState();\n\n    const [itemArray, setItemArray] = useState([]);\n    useEffect(() => {\n        catList();\n    }, []);\n\n    useEffect(() => {\n        sendToCart()\n    }, [itemArray.length])\n\n    const catList = async () => {\n        const response = await axios.get(CATALOG_URL)\n        //   const response = [\n        //      {\n        //         id: 1,\n        //         itemName: \"T-Shirt\",\n        //         description: \"T-Shirt For Mens\",\n        //         amount: 100,\n        //         imageUrl: \"https://edwiki-webserver-config.s3.amazonaws.com/1\",\n        //      },\n        //      {\n        //         id: 2,\n        //         itemName: \"Reebok Shoes\",\n        //         description: \"Reebok Shoes For Men\",\n        //         amount: 200,\n        //         imageUrl: \"\",\n        //      },\n        //      {\n        //         id: 3,\n        //         itemName: \"Nike Shoes\",\n        //         description: \"Nike Shoes For Men\",\n        //         amount: 250,\n        //         imageUrl: \"\",\n        //      },\n        //      {\n        //         id: 4,\n        //         itemName: \"Shirt\",\n        //         description: \"Shirt For Mens\",\n        //         amount: 400,\n        //         imageUrl: \"\",\n        //      },\n        //      {\n        //         id: 5,\n        //         itemName: \"Shirt\",\n        //         description: \"Shirt For Mens\",\n        //         amount: 400,\n        //         imageUrl: \"\",\n        //      },\n        //   ];\n        // const response = []\n        setCatalog(response.data);\n    };\n    const sendToCart = async () => {\n        console.log('itemArray',itemArray);\n        if (itemArray.length) {\n            console.log(\"ItemArray in cart\", itemArray);\n            let user = JSON.parse(localStorage.getItem('user'))\n            // console.log('user',user);\n            setCartData({ userid: user?.id, item: itemArray });\n        }\n        console.log(\"cartData\", cartData);\n        if (cartData.item.length) {\n            let response = await axios.post(KART_URL, cartData, null);\n            console.log('cart response', response);\n            if (response.data) {\n                localStorage.setItem('cartId',response.data?.id)\n                return <div class=\"alert alert-success\" role=\"alert\">\n                    Item Added In Cart Successfully!\n                </div>\n            }\n        }\n    }\n    const addToCart = async (element, quantity) => {\n        console.log(\"data\", element, quantity);\n        let data = {\n            itemId: element?.id,\n            quantity: quantity,\n        };\n        setItemArray([...itemArray, data]);\n        console.log('cart item', itemArray);\n\n        //   toggleProductQuantity(element);\n    };\n    const incre = (element) => {\n        if (itemArray.length) {\n            itemArray?.forEach((v) => {\n                console.log(\"elev\", v);\n                if (v?.itemId === element?.id) {\n                    v.quantity += 1;\n                }\n                console.log(\"element\", itemArray);\n                // setCartData({userid:1,item:itemArray})\n            });\n            sendToCart()\n        }\n    };\n    const decre = (element) => {\n        if (itemArray.length) {\n            itemArray?.forEach((v) => {\n                console.log(\"elem\", v);\n                if (v?.itemId === element?.id) {\n                    if (v.quantity >= 1) {\n                        v.quantity = v.quantity - 1;\n                    } else if (v.quantity < 1) {\n                        let newArray = itemArray.filter((v) => v.quantity != 0);\n                        console.log('newArray', newArray);\n                        setItemArray(newArray);\n                    }\n                    console.log(\"v\", itemArray);\n                }\n            });\n            sendToCart()\n        }\n    };\n\n    const isInCart = (element) => {\n\n        //this method should find the element item that is in the cart. If is found then true is returned, else false\n        return itemArray?.find((item) => item.itemId === element.id)\n            ? true\n            : false;\n    };\n\n    return (\n        <div className='container-fluid cat'>\n            <div className='row'>\n                <Header />\n            </div>\n            {catalog.length !== 0 ? (\n                <div className='row d-flex justify-content align-item flex-wrap mt-2'>\n                    {catalog.map((element) => {\n                        return (\n                            <div className='col-md-3 col mb-2' key={element.id}>\n                                <div className='card' style={{ width: \"15rem\" }}>\n                                    <img\n                                        src={element?.imageUrl}\n                                        className='img-fluid card-image'\n                                        alt=''\n                                    />\n                                    <div className='card-body'>\n                                        <h5 className='card-title'>₹{element?.amount}</h5>\n                                        <p className='card-text'>{element?.itemName}</p>\n                                        <p className='card-text'>\n                                            {element?.description}\n                                        </p>\n\n                                        {isInCart(element) ? (\n                                            <>\n                                                <a\n                                                    className='btn btn-outline-danger me-2'\n                                                    onClick={() => decre(element)}\n                                                >\n                                                    Sub\n                                                </a>\n                                                <a\n                                                    className='btn btn-outline-primary'\n                                                    onClick={() => incre(element)}\n                                                >\n                                                    Add\n                                                </a>\n                                            </>\n                                        ) : (<a\n                                            onClick={() => addToCart(element, 1)}\n                                            className='btn btn-outline-primary'\n                                        >\n                                            Add To Cart\n                                        </a>)}\n\n\n                                    </div>\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            ) : (\n                <></>\n            )}\n        </div>\n    );\n};\n\nexport default CatalogList;"]},"metadata":{},"sourceType":"module"}