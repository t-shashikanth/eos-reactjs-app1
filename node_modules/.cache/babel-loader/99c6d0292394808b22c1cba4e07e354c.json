{"ast":null,"code":"var _jsxFileName = \"/Users/vinaysharma/Work/ReactJs/ShoppingApp/src/Payment.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Payment = props => {\n  _s();\n\n  const location = useLocation();\n  const navigate = useNavigate();\n  console.log('state', location.state);\n  const [payment = {\n    cardHolder: '',\n    cardNumber: '',\n    monthYear: '',\n    cvc: ''\n  }, setPayment] = useState();\n  const [upi, setUPI] = useState();\n  const [modeValue, setModeValue] = useState('Select Mode');\n  const [mode, setMode] = useState(true);\n\n  const onPayment = async event => {\n    try {\n      event.preventDefault();\n      console.log('payment', payment); // navigate('/order',{state:{paymentid:1}})\n\n      navigate('/success');\n    } catch (error) {\n      console.log('paymentError', error);\n    }\n  };\n\n  const onUpiPayment = () => {\n    try {\n      console.log('upi', upi);\n    } catch (error) {\n      console.log('upiError', error);\n    }\n  };\n\n  const onCodPayment = () => {\n    try {\n      navigate('/success');\n    } catch (error) {\n      console.log('codError', error);\n    }\n  };\n\n  const byMode = mode => {\n    setMode(true);\n\n    if (mode === 'CARD') {\n      setModeValue(mode);\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"p-2\",\n        onSubmit: onPayment,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputEmail1\",\n              className: \"form-label\",\n              children: \"Card holder*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: payment === null || payment === void 0 ? void 0 : payment.cardHolder,\n              className: \"form-control\",\n              id: \"exampleInputEmail1\",\n              \"aria-describedby\": \"emailHelp\",\n              required: true,\n              onChange: ch => setPayment({ ...payment,\n                cardHolder: ch.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputPassword1\",\n              className: \"form-label\",\n              children: \"Credt/debt card number*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: payment === null || payment === void 0 ? void 0 : payment.cardNumber,\n              className: \"form-control\",\n              id: \"exampleInputPassword1\",\n              required: true,\n              onChange: cn => setPayment({ ...payment,\n                cardNumber: cn.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3 col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              htmlFor: \"expire\",\n              children: \"Expriration month and year*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: payment === null || payment === void 0 ? void 0 : payment.monthYear,\n              className: \"form-control\",\n              id: \"expire\",\n              maxLength: 5,\n              required: true,\n              onChange: my => setPayment({ ...payment,\n                monthYear: my.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3 col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              htmlFor: \"cvc\",\n              children: \"CVC*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: payment === null || payment === void 0 ? void 0 : payment.cvc,\n              className: \"form-control\",\n              id: \"cvc\",\n              maxLength: 3,\n              required: true,\n              onChange: cv => setPayment({ ...payment,\n                cvc: cv.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-outline-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }, this);\n    } else if (mode === 'UPI') {\n      setModeValue(mode);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: upi,\n          onChange: text => setUPI(text.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onUpiPayment(),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    } else if (mode === 'COD') {\n      setModeValue(mode);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onCodPayment(),\n          children: \"COD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)\n      }, void 0, false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 d-flex justify-content-center align-item-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"body\",\n            children: modeValue == 'CARD' ? console.log(modeValue) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-floating\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-select\",\n                id: \"floatingSelect\",\n                \"aria-label\": \"Floating label select example\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: modeValue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"CARD\",\n                  onClick: () => setModeValue('CARD'),\n                  children: \"CARD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"UPI\",\n                  onClick: () => setModeValue('UPI'),\n                  children: \"UPI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"COD\",\n                  onClick: () => setModeValue('COD'),\n                  children: \"COD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Payment, \"yyTaw+T5murpe2s2W0WQaDGnWlQ=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["/Users/vinaysharma/Work/ReactJs/ShoppingApp/src/Payment.jsx"],"names":["React","useState","useLocation","useNavigate","Payment","props","location","navigate","console","log","state","payment","cardHolder","cardNumber","monthYear","cvc","setPayment","upi","setUPI","modeValue","setModeValue","mode","setMode","onPayment","event","preventDefault","error","onUpiPayment","onCodPayment","byMode","ch","target","value","cn","my","cv","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,QAAQ,GAAGJ,WAAW,EAA5B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,QAAQ,CAACI,KAA9B;AACA,QAAM,CAACC,OAAO,GAAG;AAAEC,IAAAA,UAAU,EAAE,EAAd;AAAkBC,IAAAA,UAAU,EAAE,EAA9B;AAAkCC,IAAAA,SAAS,EAAE,EAA7C;AAAiDC,IAAAA,GAAG,EAAE;AAAtD,GAAX,EAAuEC,UAAvE,IAAqFf,QAAQ,EAAnG;AACA,QAAM,CAACgB,GAAD,EAAMC,MAAN,IAAgBjB,QAAQ,EAA9B;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,aAAD,CAA1C;AACA,QAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,IAAD,CAAhC;;AACA,QAAMsB,SAAS,GAAG,MAAOC,KAAP,IAAiB;AACjC,QAAI;AACFA,MAAAA,KAAK,CAACC,cAAN;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,OAAvB,EAFE,CAGF;;AACAJ,MAAAA,QAAQ,CAAC,UAAD,CAAR;AACD,KALD,CAKE,OAAOmB,KAAP,EAAc;AACdlB,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BiB,KAA5B;AACD;AACF,GATD;;AAUA,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAI;AACFnB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBQ,GAAnB;AACD,KAFD,CAEE,OAAOS,KAAP,EAAc;AACdlB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBiB,KAAxB;AACD;AACF,GAND;;AAOA,QAAME,YAAY,GAAG,MAAM;AACzB,QAAI;AACFrB,MAAAA,QAAQ,CAAC,UAAD,CAAR;AACD,KAFD,CAEE,OAAOmB,KAAP,EAAc;AACdlB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBiB,KAAxB;AACD;AACF,GAND;;AAOA,QAAMG,MAAM,GAAIR,IAAD,IAAU;AACvBC,IAAAA,OAAO,CAAC,IAAD,CAAP;;AACA,QAAID,IAAI,KAAK,MAAb,EAAqB;AACnBD,MAAAA,YAAY,CAACC,IAAD,CAAZ;AACA,0BAAO;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAsB,QAAA,QAAQ,EAAEE,SAAhC;AAAA,gCACL;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACE;AAAO,cAAA,OAAO,EAAC,oBAAf;AAAoC,cAAA,SAAS,EAAC,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,KAAK,EAAEZ,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEC,UAAnC;AAA+C,cAAA,SAAS,EAAC,cAAzD;AAAwE,cAAA,EAAE,EAAC,oBAA3E;AAAgG,kCAAiB,WAAjH;AAA6H,cAAA,QAAQ,MAArI;AAAsI,cAAA,QAAQ,EAAGkB,EAAD,IAAQd,UAAU,CAAC,EAAE,GAAGL,OAAL;AAAcC,gBAAAA,UAAU,EAAEkB,EAAE,CAACC,MAAH,CAAUC;AAApC,eAAD;AAAlK;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADK,eAOL;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACE;AAAO,cAAA,OAAO,EAAC,uBAAf;AAAuC,cAAA,SAAS,EAAC,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,KAAK,EAAErB,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEE,UAAnC;AAA+C,cAAA,SAAS,EAAC,cAAzD;AAAwE,cAAA,EAAE,EAAC,uBAA3E;AAAmG,cAAA,QAAQ,MAA3G;AAA4G,cAAA,QAAQ,EAAGoB,EAAD,IAAQjB,UAAU,CAAC,EAAE,GAAGL,OAAL;AAAcE,gBAAAA,UAAU,EAAEoB,EAAE,CAACF,MAAH,CAAUC;AAApC,eAAD;AAAxI;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPK,eAaL;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACE;AAAO,cAAA,SAAS,EAAC,kBAAjB;AAAoC,cAAA,OAAO,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,KAAK,EAAErB,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEG,SAAnC;AAA8C,cAAA,SAAS,EAAC,cAAxD;AAAuE,cAAA,EAAE,EAAC,QAA1E;AAAmF,cAAA,SAAS,EAAE,CAA9F;AAAiG,cAAA,QAAQ,MAAzG;AAA0G,cAAA,QAAQ,EAAGoB,EAAD,IAAQlB,UAAU,CAAC,EAAE,GAAGL,OAAL;AAAcG,gBAAAA,SAAS,EAAEoB,EAAE,CAACH,MAAH,CAAUC;AAAnC,eAAD;AAAtI;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACE;AAAO,cAAA,SAAS,EAAC,kBAAjB;AAAoC,cAAA,OAAO,EAAC,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,KAAK,EAAErB,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEI,GAAnC;AAAwC,cAAA,SAAS,EAAC,cAAlD;AAAiE,cAAA,EAAE,EAAC,KAApE;AAA0E,cAAA,SAAS,EAAE,CAArF;AAAwF,cAAA,QAAQ,MAAhG;AAAiG,cAAA,QAAQ,EAAGoB,EAAD,IAAQnB,UAAU,CAAC,EAAE,GAAGL,OAAL;AAAcI,gBAAAA,GAAG,EAAEoB,EAAE,CAACJ,MAAH,CAAUC;AAA7B,eAAD;AAA7H;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbK,eAuBL;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,yBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBK;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAyBD,KA3BD,MA2BO,IAAIX,IAAI,KAAK,KAAb,EAAoB;AACzBD,MAAAA,YAAY,CAACC,IAAD,CAAZ;AACA,0BAAO;AAAA,gCACL;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEJ,GAA1B;AAA+B,UAAA,QAAQ,EAAGmB,IAAD,IAAUlB,MAAM,CAACkB,IAAI,CAACL,MAAL,CAAYC,KAAb;AAAzD;AAAA;AAAA;AAAA;AAAA,gBADK,eAEL;AAAQ,UAAA,OAAO,EAAE,MAAML,YAAY,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFK;AAAA,sBAAP;AAID,KANM,MAMA,IAAIN,IAAI,KAAK,KAAb,EAAoB;AACzBD,MAAAA,YAAY,CAACC,IAAD,CAAZ;AACA,0BAAO;AAAA,+BACL;AAAQ,UAAA,OAAO,EAAE,MAAMO,YAAY,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADK,uBAAP;AAGD;AACF,GAzCD;;AA0CA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,2DAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,sBACGT,SAAS,IAAI,MAAb,GAAsBX,OAAO,CAACC,GAAR,CAAYU,SAAZ,CAAtB,gBAA+C;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,qCAC9C;AAAQ,gBAAA,SAAS,EAAC,aAAlB;AAAgC,gBAAA,EAAE,EAAC,gBAAnC;AAAoD,8BAAW,+BAA/D;AAAA,wCACE;AAAA,4BAASA;AAAT;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAQ,kBAAA,KAAK,EAAC,MAAd;AAAqB,kBAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,MAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAQ,kBAAA,KAAK,EAAC,KAAd;AAAoB,kBAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,KAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE;AAAQ,kBAAA,KAAK,EAAC,KAAd;AAAoB,kBAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,KAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAD8C;AAAA;AAAA;AAAA;AAAA;AADlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA9FD;;GAAMhB,O;UACaF,W,EACAC,W;;;KAFbC,O;AAgGN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Payment = (props) => {\n  const location = useLocation()\n  const navigate = useNavigate()\n  console.log('state', location.state);\n  const [payment = { cardHolder: '', cardNumber: '', monthYear: '', cvc: '' }, setPayment] = useState();\n  const [upi, setUPI] = useState()\n  const [modeValue, setModeValue] = useState('Select Mode')\n  const [mode, setMode] = useState(true)\n  const onPayment = async (event) => {\n    try {\n      event.preventDefault()\n      console.log('payment', payment);\n      // navigate('/order',{state:{paymentid:1}})\n      navigate('/success');\n    } catch (error) {\n      console.log('paymentError', error);\n    }\n  }\n  const onUpiPayment = () => {\n    try {\n      console.log('upi', upi);\n    } catch (error) {\n      console.log('upiError', error);\n    }\n  }\n  const onCodPayment = () => {\n    try {\n      navigate('/success');\n    } catch (error) {\n      console.log('codError', error);\n    }\n  }\n  const byMode = (mode) => {\n    setMode(true)\n    if (mode === 'CARD') {\n      setModeValue(mode)\n      return <form className='p-2' onSubmit={onPayment}>\n        <div className=\"form-group\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Card holder*</label>\n            <input type=\"text\" value={payment?.cardHolder} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" required onChange={(ch) => setPayment({ ...payment, cardHolder: ch.target.value })} />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Credt/debt card number*</label>\n            <input type=\"text\" value={payment?.cardNumber} className=\"form-control\" id=\"exampleInputPassword1\" required onChange={(cn) => setPayment({ ...payment, cardNumber: cn.target.value })} />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <div className=\"mb-3 col\">\n            <label className=\"form-check-label\" htmlFor=\"expire\">Expriration month and year*</label>\n            <input type=\"text\" value={payment?.monthYear} className=\"form-control\" id=\"expire\" maxLength={5} required onChange={(my) => setPayment({ ...payment, monthYear: my.target.value })} />\n          </div>\n          <div className=\"mb-3 col\">\n            <label className=\"form-check-label\" htmlFor=\"cvc\">CVC*</label>\n            <input type=\"text\" value={payment?.cvc} className=\"form-control\" id=\"cvc\" maxLength={3} required onChange={(cv) => setPayment({ ...payment, cvc: cv.target.value })} />\n          </div>\n        </div>\n        <button type=\"submit\" className=\"btn btn-outline-primary\">Submit</button>\n      </form>\n    } else if (mode === 'UPI') {\n      setModeValue(mode)\n      return <>\n        <input type='text' value={upi} onChange={(text) => setUPI(text.target.value)} />\n        <button onClick={() => onUpiPayment()}>Submit</button>\n      </>\n    } else if (mode === 'COD') {\n      setModeValue(mode)\n      return <>\n        <button onClick={() => onCodPayment()}>COD</button>\n      </>\n    }\n  }\n  return (\n    <div className='container'>\n      <div className=\"row\">\n        <div className=\"col-md-12 d-flex justify-content-center align-item-center\">\n          <div className=\"card\">\n            <div className=\"body\">\n              {modeValue == 'CARD' ? console.log(modeValue) : <div className=\"form-floating\">\n                <select className=\"form-select\" id=\"floatingSelect\" aria-label=\"Floating label select example\">\n                  <option>{modeValue}</option>\n                  <option value=\"CARD\" onClick={() => setModeValue('CARD')}>CARD</option>\n                  <option value=\"UPI\" onClick={() => setModeValue('UPI')}>UPI</option>\n                  <option value=\"COD\" onClick={() => setModeValue('COD')}>COD</option>\n                </select>\n              </div>}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Payment\n"]},"metadata":{},"sourceType":"module"}